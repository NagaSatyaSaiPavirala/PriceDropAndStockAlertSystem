# events {}

# http {
# 	upstream pricedrop {
# 		server 172.17.0.7:8080;
# 		server 172.17.0.9:8080;
# 		server 172.17.0.10:8080;
# 	}

# 	server {
# 		listen 8080;
# 		location / {
# 			proxy_pass http://pricedrop/;
# 		}
# 	}
# } 







# events {}

# http {
# 	upstream pricedrop {
# 		server 172.17.0.7:8080;
# 		server 172.17.0.9:8080;
# 		server 172.17.0.10:8080;
# 	}

# 	server {
# 		listen 8080;

# 		location / {
# 			add_header 'Access-Control-Allow-Origin' '*' always;
# 			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
# 			add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

# 			# Handle OPTIONS preflight requests
# 			if ($request_method = OPTIONS) {
# 				add_header 'Access-Control-Max-Age' 1728000;
# 				add_header 'Content-Type' 'text/plain charset=UTF-8';
# 				add_header 'Content-Length' 0;
# 				return 204;
# 			}

# 			proxy_pass http://pricedrop/;
# 			proxy_set_header Host $host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 		}
# 	}
# }






# events {}

# http {
#     upstream pricedrop {
#         server 172.17.0.7:8080;
#         server 172.17.0.9:8080;
#         server 172.17.0.10:8080;
#     }

#     server {
#         listen 8080;

#         # # Serve React frontend
#         # location / {
#         #     root /usr/share/nginx/html;
#         #     index index.html;
#         #     try_files $uri /index.html;
#         # }

#         # Proxy API requests to Spring Boot
#         location / {
#             proxy_pass http://pricedrop/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Optional: CORS headers
#             add_header 'Access-Control-Allow-Origin' '*' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#             add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

#             if ($request_method = OPTIONS ) {
#                 return 204;
#             }
#         }
#     }
# }





# worker_processes  1;

# events {
#     worker_connections  1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     # Define an upstream group with multiple Spring Boot instances
#     upstream backend {
#         server 172.17.0.7:8080;
#        server 172.17.0.9:8080;
#         server 172.17.0.10:8080;
#     }

#     server {
#         listen 8080;
#         server_name localhost;

#         location / {
#             proxy_pass http://backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root html;
#         }
#     }
# }




# worker_processes  1;

# events {
#     worker_connections  1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     upstream backend {
#         server 172.17.0.7:8080;
#         server 172.17.0.9:8080;
#         server 172.17.0.10:8080;
#     }

#     server {
#         listen 8080;
#         server_name localhost;

#         location / {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;

#             # ✅ Proper forwarding headers
#             proxy_set_header Host $host:$server_port;
#             proxy_set_header X-Forwarded-Host $host;
#             proxy_set_header X-Forwarded-Port $server_port;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root html;
#         }
#     }
# }





# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout 65;

#     # Spring Boot backend cluster
#     upstream backend {
#         server 172.17.0.7:8080;
#         server 172.17.0.9:8080;
#         server 172.17.0.10:8080;
#     }

#     server {
#         listen 80;
#         server_name localhost;

#         # React static files
#         root /usr/share/nginx/html;
#         index index.html;

#         # Serve static files directly
#         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2|eot|otf|map)$ {
#             expires 30d;
#             access_log off;
#         }

#         # Forward everything else to Spring Boot
#         location / {
#             try_files $uri @backend;
#         }

#         location @backend {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;

#             proxy_set_header Host $host:$server_port;
#             proxy_set_header X-Forwarded-Host $host;
#             proxy_set_header X-Forwarded-Port $server_port;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }





# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout 65;

#     # Upstream for Spring Boot backend services
#     upstream backend {
#         server 172.17.0.7:8080;
#         server 172.17.0.9:8080;
#         server 172.17.0.10:8080;
#     }

#     server {
#         listen 8080;
#         server_name localhost;

#         # Forward everything to Spring Boot backend
#         location / {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;

#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root html;
#         }
#     }
# }




# events {}

# http {
# 	upstream pricedrop {

# 		server 172.17.0.7:8080;
# 		server 172.17.0.9:8080;
# 		server 172.17.0.10:8080;
# 	}

# 	server {
# 		listen 8080;
# 		location / {
# 			proxy_pass http://pricedrop/;
# 		}
# 	}
# } 




# events {}

# http {
#     upstream pricedrop {
#         ip_hash;  # Enables sticky sessions based on client IP
#         server 172.17.0.7:8080;
#         server 172.17.0.9:8080;
#         server 172.17.0.12:8080;
#     }

#     server {
#         listen 8080;

#         location / {
#             proxy_pass http://pricedrop;

#             # Preserve headers for authentication/session
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Support WebSocket or keep-alive connections
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";

#             # Optional: Adjust timeout settings
#             proxy_connect_timeout 60s;
#             proxy_send_timeout 60s;
#             proxy_read_timeout 60s;

#             # Optional: Log proxied requests
#             access_log /var/log/nginx/access.log;
#             error_log /var/log/nginx/error.log;
#         }
#     }
# }




events {}

http {
    upstream pricedrop {
        ip_hash;  # Sticky sessions based on client IP
        server 172.17.0.7:8080;
        server 172.17.0.13:8080;
        server 172.17.0.9:8080;
    }

    server {
        listen 8080;

#        location / {
#     proxy_pass http://pricedrop;

#     # ✅ Required for Spring Boot behind proxy
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;

#     # ✅ Required for session/cookie and WebSockets
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "upgrade";

#     # Optional but recommended
#     proxy_connect_timeout 60s;
#     proxy_send_timeout 60s;
#     proxy_read_timeout 60s;
# }

location / {
    proxy_pass http://pricedrop;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    proxy_redirect off;
}


    }
}
