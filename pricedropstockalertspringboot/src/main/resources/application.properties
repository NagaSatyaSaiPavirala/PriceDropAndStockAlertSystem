spring.datasource.url=jdbc:mysql://localhost:3306/pricetracker
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
#spring.datasource.password=jainjain@1
spring.datasource.password=root
spring.datasource.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.servlet.multipart.enabled=true


#api.username = jain@gmail.com
#api.password = jain


api.username = p.nagasatyasai.123@gmail.com
api.password = satya


spring.kafka.producer.bootstrap-servers=172.17.0.6:9092
#spring.kafka.producer.bootstrap-servers=127.0.0.1:9092


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#com.pricedrop.topics={'text/html':'html_topic','image/jpeg':'jpg_topic','application/pdf':'pdf_topic'}
com.pricedrop.topics={'price':'price_topic','stock':'stock_topic'}


com.pricedrop.service.cooldown=7




#0 th database
com.pricedrop.cache.url=redis://172.17.0.2:6379/0
#com.pricedrop.cache.url=redis://127.0.0.1:6379/0
com.pricedrop.service.cache.ttl=1



spring.devtools.restart.enabled=true

#logging.level.root=DEBUG




spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.bootstrap-servers=172.17.0.6:9092
#spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.pricedrop.model
#com.satya.app.html-worker.urldataextractor.baseurl=http://172.17.0.8:8085
com.pricedrop.baseurl=http://127.0.0.1:8080
#com.satya.app.html-worker.urldataextractor.baseurl=http://127.0.0.1:5001/urldataextractor

spring.data.mongodb.host=172.17.0.3
#spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017
spring.data.mongodb.database=web_collection

spring.application.name=pricedrop
#eureka.client.serviceUrl.defaultZone=http://localhost:9001/eureka
#eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://172.17.0.8:9001/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.instance.preferIpAddress=true
management.security.enabled=false
management.endpoints.web.exposure.include=*



spring.data.cassandra.contact-points=172.17.0.4
#spring.data.cassandra.contact-points=127.0.0.1
#spring.data.cassandra.contact-points=172.17.0.2,172.17.0.7,172.17.0.8
spring.data.cassandra.keyspace-name=pricedrop
spring.data.cassandra.port=9042
spring.data.cassandra.local-datacenter=datacenter1
#spring.data.cassandra.local-datacenter=dc1
#spring.cassandra.schema-action=CREATE_IF_NOT_EXISTS.
spring.data.cassandra.schema-action=create-if-not-exists

#spring.jackson.time-zone=Asia/Kolkata
#cassandra.default-timezone=Asia/Kolkata

#logging.level.com.datastax.oss.driver=DEBUG
#spring.data.cassandra.contact-points=host.docker.internal
#spring.data.cassandra.contact-points=cassandra


#logging.level.org.springframework.security=DEBUG
#server.error.whitelabel.enabled=false



#eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true



# Tell Eureka what IP and port to use
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.instance.non-secure-port=8080
eureka.instance.status-page-url=http://localhost:8080/actuator/info
eureka.instance.health-check-url=http://localhost:8080/actuator/health
eureka.instance.home-page-url=http://localhost:8080



server.forward-headers-strategy=native
server.use-forward-headers=true

